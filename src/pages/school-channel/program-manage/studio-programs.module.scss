:root {
  --user-profile-modal-bg: #ffffff;
  --user-profile-modal-shadow: 0 20px 40px rgba(0, 0, 0, 0.1);
  --user-profile-modal-border: #f0f4f8;
  --user-profile-modal-input-bg: #f8faff;
  --user-profile-modal-input-focus-shadow: 0 0 0 3px rgba(74, 144, 226, 0.15);
  --user-profile-modal-button-gradient: linear-gradient(
    135deg,
    #4a90e2,
    #357abd
  );
  --user-profile-modal-button-shadow: 0 8px 15px rgba(74, 144, 226, 0.2);
  --modal-close-x: #4a90e2;
  --user-profile-theme-filter: invert(0.8);
}

[data-theme="dark"] {
  --user-profile-modal-bg: #1a2634;
  --user-profile-modal-shadow: 0 20px 40px rgba(0, 0, 0, 0.3);
  --user-profile-modal-border: #2a3f52;
  --user-profile-modal-input-bg: #1e293b;
  --user-profile-modal-input-focus-shadow: 0 0 0 3px rgba(74, 144, 226, 0.25);
  --user-profile-theme-filter: invert(0.5);
}

.studioProgramsContainer {
  padding: 2rem 5%;
  min-height: 100vh;
  padding-top: 70px;
}

.headerSection {
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin-bottom: 2rem;
  padding: 1rem 0;
  border-bottom: 2px solid var(--border-color);

  h2 {
    font-size: 1.8rem;
    display: flex;
    align-items: center;
    gap: 1rem;
    margin: 0;
  }

  @media (max-width: 768px) {
    flex-direction: column;
    align-items: flex-start;
    gap: 1rem;
  }
}

.buttonGroup {
  display: flex;
  gap: 1rem;

  @media (max-width: 768px) {
    flex-direction: column;
    width: 100%;
    gap: 0.8rem;
  }
}

.createButton {
  background: var(--primary-color);
  color: white;
  padding: 0.8rem 1.5rem;
  border: none;
  border-radius: 8px;
  display: flex;
  align-items: center;
  gap: 0.8rem;
  cursor: pointer;
  transition: transform 0.2s ease;

  &:hover {
    background: var(--hover-color);
    transform: translateY(-2px);
  }
}

.scheduleButton {
  background: var(--primary-color);
  color: white;
  padding: 0.8rem 1.5rem;
  border: none;
  border-radius: 8px;
  display: flex;
  align-items: center;
  gap: 0.8rem;
  cursor: pointer;
  transition: transform 0.2s ease;

  &:hover {
    background: var(--hover-color);
    transform: translateY(-2px);
  }
}

.programHeader {
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin-bottom: 1rem;
  min-height: 40px;

  .programName {
    margin: 0;
    flex: 1;
    font-size: 1.2rem;
    display: -webkit-box;
    -webkit-line-clamp: 2;
    line-clamp: 2;
    -webkit-box-orient: vertical;
    overflow: hidden;
    text-overflow: ellipsis;
    line-height: 1.4;
    max-height: 3em; // 2 dòng * 1.4 line-height
  }
}

.editButton {
  background: var(--primary-color);
  color: white;
  padding: 0.5rem 1rem;
  border: none;
  margin-left: 10px;
  border-radius: 6px;
  cursor: pointer;
  transition: all 0.2s ease;
  flex-shrink: 0;
  height: 40px; // Cố định chiều cao

  &:hover {
    background: var(--hover-color);
    transform: translateY(-1px);
  }
}

.deleteButton {
  width: calc(100% - 48px);
  margin: 0 24px 24px;
  padding: 1rem;
  background: #ff4d4f;
  color: white;
  border: none;
  border-radius: 12px;
  cursor: pointer;
  font-weight: 600;
  font-size: 1rem;
  letter-spacing: 0.5px;
  box-shadow: 0 8px 15px rgba(255, 77, 79, 0.2);
  transition: all 0.3s ease;

  &:hover {
    background: #ff7875;
    transform: translateY(-3px);
    box-shadow: 0 10px 20px rgba(255, 77, 79, 0.3);
  }

  &:active {
    background: #ff4d4f;
  }
}

.createModal {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: rgba(0, 0, 0, 0.5);
  display: flex;
  align-items: center;
  justify-content: center;
  z-index: 3000;
  animation: fadeIn 0.4s ease;
}

.modalContent {
  background: var(--user-profile-modal-bg);
  padding: 0;
  border-radius: 24px;
  width: 100%;
  max-width: 500px;
  box-shadow: var(--user-profile-modal-shadow);
  border: 1px solid var(--user-profile-modal-border);
  overflow: hidden;

  @media (max-width: 768px) {
    width: calc(100% - 2rem); // Subtracting 2rem (1rem on each side) for margin
    max-width: 100%;
    margin: 0 1rem; // Add some horizontal margin
    max-height: 90vh;
    overflow-y: auto;
  }
}

.modalHeader {
  padding: 24px 24px 20px;
  border-bottom: 1px solid rgba(74, 144, 226, 0.1);
  position: relative;
  background: var(--user-profile-card-bg);

  h3 {
    font-size: 1.5rem;
    margin: 0;
    font-weight: 700;
    color: var(--user-profile-text-primary);
  }

  @media (max-width: 768px) {
    padding: 1rem 1rem 0.8rem;

    h3 {
      font-size: 1.3rem; // Slightly smaller heading
    }
  }
}

.closeButton {
  position: absolute;
  top: 20px;
  right: 20px;
  background: none;
  border: none;
  color: var(--user-profile-text-secondary);
  font-size: 1.2rem;
  cursor: pointer;
  padding: 0.5rem;
  transition: all 0.3s ease;

  &:hover {
    color: var(--modal-close-x);
    transform: rotate(90deg);
  }

  @media (max-width: 768px) {
    top: 1rem;
    right: 1rem;
    font-size: 1.3rem;
  }
}

.formGroup {
  padding: 0 24px;
  margin-bottom: 24px;
  padding-top: 10px;

  label:not(.checkboxLabel) {
    // Add :not(.checkboxLabel) to exclude checkbox labels
    display: block;
    font-weight: 600;
    color: var(--user-profile-text-primary);
    font-size: 0.95rem;
    margin-bottom: 8px; // Add some spacing between label and input
  }

  input:not([type="checkbox"]),
  select {
    // Exclude checkbox inputs
    width: 100%;
    padding: 12px 15px;
    border: 1px solid rgba(74, 144, 226, 0.15);
    border-radius: 12px;
    background: var(--user-profile-modal-input-bg);
    color: var(--user-profile-input-text);
    transition: all 0.3s ease;
    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.02);

    &:focus {
      border-color: var(--user-profile-primary-color);
      box-shadow: var(--user-profile-modal-input-focus-shadow);
      outline: none;
    }
  }

  label {
    display: block;
    font-weight: 600;
    color: var(--user-profile-text-primary);
    font-size: 0.95rem;
  }

  input,
  select {
    width: 100%;
    padding: 12px 15px;
    border: 1px solid rgba(74, 144, 226, 0.15);
    border-radius: 12px;
    background: var(--user-profile-modal-input-bg);
    color: var(--user-profile-input-text);
    transition: all 0.3s ease;
    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.02);

    &:focus {
      border-color: var(--user-profile-primary-color);
      box-shadow: var(--user-profile-modal-input-focus-shadow);
      outline: none;
    }
  }

  input[type="datetime-local"] {
    &::-webkit-calendar-picker-indicator {
      filter: var(--user-profile-theme-filter);
    }

    @media (max-width: 768px) {
      font-size: 0.9rem; // Make sure date text fits
    }
  }

  @media (max-width: 768px) {
    padding: 0 1rem; // Reduce side padding on mobile
    margin-bottom: 1rem;
    padding-top: 0.5rem;
  }
}

// Update the checkboxContainer styles
.checkboxContainer {
  margin-bottom: 26px;

  .checkboxLabel {
    display: flex; // Changed from inline-flex to flex
    align-items: center;
    gap: 0; // Changed from 8px to 0 to remove space between checkbox and label
    cursor: pointer;
    color: var(--user-profile-text-primary);
    user-select: none;
    font-weight: 600;
    font-size: 0.95rem;
    margin: 0;
    padding: 0;

    .checkboxInput {
      width: 18px;
      height: 18px;
      min-width: 18px;
      accent-color: var(--user-profile-primary-color);
      cursor: pointer;
      margin: 0;
      margin-right: 8px; // Add space only to the right of the checkbox
      padding: 0;
      flex-shrink: 0;
    }
  }
}

.inputError {
  border-color: #ff4d4f !important;
  box-shadow: 0 0 0 2px rgba(255, 77, 79, 0.2) !important;
}

// Add character counter styles
.characterCounter {
  font-size: 0.8rem;
  color: var(--text-secondary);
  text-align: right;
  margin-top: 4px;

  &.error {
    color: #ff4d4f;
  }
}

.toggleInactiveButton {
  background: transparent;
  color: var(--primary-color);
  padding: 0.8rem 1.5rem;
  border: 1px solid var(--primary-color);
  border-radius: 8px;
  display: flex;
  align-items: center;
  gap: 0.8rem;
  cursor: pointer;
  transition: all 0.2s ease;

  &:hover {
    background: rgba(74, 144, 226, 0.1);
    transform: translateY(-2px);
  }
}

.createButton,
.scheduleButton,
.toggleInactiveButton {
  @media (max-width: 768px) {
    width: 100%;
    justify-content: center;
  }
}

@media (max-width: 768px) {
  .studioProgramsContainer {
    padding: 1.5rem;
    padding-top: 65px;
  }

  .headerSection h2 {
    font-size: 1.5rem;
  }

  .programsGrid {
    grid-template-columns: 1fr;
  }

  .programCard {
    margin-bottom: 1rem;
  }
}

@media (max-width: 768px) {
  .createButton,
  .scheduleButton,
  .toggleInactiveButton {
    padding: 1rem 1.5rem;
  }
}

.submitButton {
  width: calc(100% - 48px);
  margin: 0 24px 24px;
  padding: 1rem;
  background: var(--user-profile-modal-button-gradient);
  color: white;
  border: none;
  border-radius: 12px;
  cursor: pointer;
  font-weight: 600;
  font-size: 1rem;
  letter-spacing: 0.5px;
  box-shadow: var(--user-profile-modal-button-shadow);
  transition: all 0.3s ease;
  position: relative;
  overflow: hidden;
  margin-bottom: 16px;

  &:hover {
    transform: translateY(-3px);
    box-shadow: 0 10px 20px rgba(74, 144, 226, 0.3);
  }

  &:disabled {
    background: var(--disabled-bg);
    cursor: not-allowed;
    transform: none;
    box-shadow: none;
  }
}

.submitButton,
.deleteButton {
  @media (max-width: 768px) {
    width: calc(100% - 2rem); // Match the modal width
    margin: 0 1rem 1rem; // Consistent with modal margins
  }
}

@keyframes fadeIn {
  from {
    opacity: 0;
    transform: translateY(20px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

.programsGrid {
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
  gap: 1.5rem;
  margin-top: 1rem;
}

.programCard {
  background: var(--card-bg);
  border-radius: 12px;
  overflow: hidden;
  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
  transition: transform 0.3s ease;

  &:hover {
    transform: translateY(-5px);
  }
}

.programThumbnail {
  position: relative;
  padding-top: 56.25%;
  overflow: hidden;

  img {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    object-fit: cover;
  }
}

.programTitle {
  color: var(--text-secondary);
  font-size: 0.95rem;
  display: -webkit-box;
  -webkit-line-clamp: 2;
  line-clamp: 2;
  -webkit-box-orient: vertical;
  overflow: hidden;
  text-overflow: ellipsis;
  margin-bottom: 1rem;
  line-height: 1.4;
  max-height: 2.8em; // 2 dòng * 1.4 line-height
}

.programBadge {
  position: absolute;
  top: 1rem;
  left: 1rem;
  background: rgba(0, 0, 0, 0.8);
  color: white;
  padding: 0.5rem 1rem;
  border-radius: 20px;
  font-size: 0.9rem;
  display: flex;
  align-items: center;
  gap: 0.5rem;

  &.inactive {
    background: rgba(255, 77, 79, 0.8);
  }
}

.programInfo {
  padding: 1.5rem;

  h3 {
    font-size: 1.2rem;
    display: -webkit-box;
    -webkit-line-clamp: 1;
    line-clamp: 1;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }
}

.programMeta {
  display: flex;
  justify-content: space-between;
  align-items: center;
  color: var(--text-secondary);
  font-size: 0.9rem;

  span {
    display: flex;
    align-items: center;
    gap: 0.5rem;
  }
}

.emptyState {
  text-align: center;
  padding: 4rem 0;
  color: var(--text-secondary);

  img {
    width: 300px;
    margin-bottom: 2rem;
  }

  h3 {
    margin: 0 0 0.5rem 0;
    font-size: 1.5rem;
  }

  p {
    margin: 0;
    font-size: 1rem;
  }
}

.loadingContainer {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  height: 50vh;
  gap: 1rem;
  color: var(--text-secondary);
}
